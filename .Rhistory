rmarkdown::render(input=rmdFile,
output_format = outF,
output_file = outputFile,
output_dir = outDirectory,
clean=FALSE,
quiet = TRUE,
#                      intermediates_dir = outDirectory,
#                      knit_root_dir = outDirectory,
params=list(variant=variantname,
factsfile=factsFile,
factspath=factsPath,
paramfile=paramFilename,
codefile=codeFile))
tmp = readLines(mdFile)
tabRegexp = "TABREF.[0-9a-zA-Z]+\\s"
m = gregexpr(tabRegexp, tmp)
tabrefs = unique(unlist(regmatches(tmp,m)))
for(i in 1:length(tabrefs)) {
tmp = gsub(tabrefs[i],i,tmp,fixed=TRUE)
}
writeLines(tmp, mdFile)
rmarkdown::render(input=mdFile,
output_format = outF,
output_file = outputFile,
output_dir = outDirectory,
clean=FALSE,
quiet = TRUE)
#                      intermediates_dir = outDirectory,
#                      knit_root_dir = outDirectory)
tmpRmdFile = file.path(outDirectory, rmdFilename)
suppressWarnings(file.remove(tmpRmdFile))
tmp = gsub('.Rmd', '.utf8.md', tmpRmdFile)
suppressWarnings(file.remove(tmp))
tmp = gsub('.Rmd', '.knit.utf8.md', tmpRmdFile)
suppressWarnings(file.remove(tmp))
tmp = gsub('.Rmd', '.knit.md', tmpRmdFile)
suppressWarnings(file.remove(tmp))
suppressWarnings(file.remove(file.path(outDirectory, 'facts-report.docx')))
setwd(CWD)
}
## BEACON2 simulations
##
## largely copied from EOLIA program
## 8 JULY 2021
## edited Oct 2022 for protocol and SAP writing
## editedd July 2024 for interim TTE results
##############################################################################################
## SETUP
library(dplyr)
library(ggplot2)
##############################################################################################
## read in data from FACTS - aggregated weeks files
## should be 1000 simulations for each scenario
## beacon2_interim_TTE is the FACTS file that has the time to event interim analysis
## at 40 patients + 26 weeks
weeks <- read.csv("C:/Users/notne/Research/GitHub/BEACON2/beacon2_interim_TTE_results/agg_beacon2_interim_TTE_simulations.csv", skip = 2)
weeks$numevent <- weeks$Num.Events.1.1 + weeks$Num.Events.2.1
weeks$propdif <- ((weeks$Num.Events.2.1/40) - (weeks$Num.Events.1.1/40)) * 100
## make reduced data sets for each treatment effect scenario (HR = 1 (null) and HR = 0.7 and HR = 0.8
null <- weeks %>%
filter(X.Scenario.ID == 1) #%>%
#  filter(InterimNumber == 1)
HR06 <- weeks %>%
filter(X.Scenario.ID == 2) #%>%
#  filter(InterimNumber == 1)
HR07 <- weeks %>%
filter(X.Scenario.ID == 3) #%>%
#  filter(InterimNumber == 1)
HR08 <- weeks %>%
filter(X.Scenario.ID == 4) #%>%
#  filter(InterimNumber == 1)
################################################################################
## plot histograms of differnece in proprtions of events
ggplot(weeks, aes(x=propdif)) +
geom_histogram(col = "blue", fill = "light blue", binwidth = 2.5) +
xlim(-50, 50) +
facet_wrap(~Dose.Response.Profile) +
xlab("Diffference in proportion of events (%)") +
ylab("Number of simulations") +
geom_vline(xintercept = 20) +
geom_vline(xintercept = -20)
##################################################################################
## plot histograms of decision criteria
sims <- read.csv("C:/Users/notne/Research/GitHub/BEACON2/beacon2_interim_TTE_results/agg_beacon2_interim_TTE_simulations.csv", skip = 2)
## plot of number probability (HR<1)
ggplot(sims, aes(x=Pr.PBO._at_arm2)) +
geom_histogram(col = "blue", fill = "light blue", binwidth = 0.1) +
xlim(0, 1) +
facet_wrap(~Dose.Response.Profile) +
xlab("Probability of hazard ratio < 1") +
ylab("Number of simulations")
## plot of number of events in each group
ggplot(sims) +
geom_histogram(data=sims, aes(x=Num.Events.1.1), fill="blue", alpha=0.5, binwidth=1) +
geom_histogram(data=sims, aes(x=Num.Events.2.1), fill="red", alpha=0.5, binwidth=1) +
facet_wrap(~Dose.Response.Profile) +
xlab("Number of events") +
ylab("Number of simulations")
## plot of distributions of hazard ratios
ggplot(sims, aes(x=Mean.resp.2)) +
geom_histogram(col = "blue", fill = "light blue", binwidth = 0.1) +
xlim(0, 2.5) +
facet_wrap(~Dose.Response.Profile) +
xlab("Hazard ratio") +
ylab("Number of simulations")
################################################################################################
ggplot(null, aes(x=numevent)) +
geom_histogram(col = "red", fill = "pink", binwidth = 1) +
xlim(0, 100)
ggplot(HR07, aes(x=numevent)) +
geom_histogram(col = "blue", fill = "light blue", binwidth = 1) +
xlim(0, 100)
ggplot(HR08, aes(x=numevent)) +
geom_histogram(col = "green", fill = "light green", binwidth = 1) +
xlim(0, 100)
###############################################################################################
ggplot(weeks, aes(x=propdif)) +
geom_histogram(col = "blue", fill = "light blue", binwidth = 2.5) +
xlim(-50, 50) +
facet_wrap(~Dose.Response.Profile) +
xlab("Diffference in proportion of events (%)") +
ylab("Number of simulations") +
geom_vline(xintercept = 20) +
geom_vline(xintercept = -20) +
geom_vline(xintercept = 10) +
geom_vline(xintercept = -10)
ggplot(weeks, aes(x=propdif)) +
geom_histogram(col = "blue", fill = "light blue", binwidth = 2.5) +
xlim(-50, 50) +
facet_wrap(~Dose.Response.Profile) +
xlab("Diffference in proportion of events (%) vertical lines show +/- 10 and 20%") +
ylab("Number of simulations") +
geom_vline(xintercept = 20) +
geom_vline(xintercept = -20) +
geom_vline(xintercept = 10) +
geom_vline(xintercept = -10)
setwd("C:/Users/notne/Research/GitHub/Gails_beetles")
read.csv("beetles.csv")
setwd("C:/Users/notne/Research/GitHub/Gails_beetles")
beetle <- read.csv("beetles.csv")
View(beetle)
str(beetles)
str(beetle)
# Sample data
data <- data.frame(id = 1:3,
text = c("apple_banana", "orange_grape", "pear_mango"))
# Split the 'text' variable
split_text <- strsplit(as.character(data$text), "_")
# Create two new factor variables
data$fruit1 <- factor(sapply(split_text, `[`, 1))
data$fruit2 <- factor(sapply(split_text, `[`, 2))
# View the updated data frame
print(data)
View(split_text)
split_text <- strsplit(as.character(beetle$Label), " ")
beetle$field <- factor(sapply(split_text, `[`, 1))
beetle$sample2 <- factor(sapply(split_text, `[`, 2))
# Sample data
data <- data.frame(id = 1:3,
text = c("apple", "orange", "pear"))
# Extract the first character and convert to a factor
data$first_char <- factor(substr(data$text, 1, 1))
# View the updated data frame
print(data)
beetle$field <- factor(substr(beetle$Label, 1, 1))
View(beetle)
str(beetle)
beetle$sloc <- factor(substr(beetle$Label, 5, 5))
View(beetle)
beetle$sloc <- factor(substr(beetle$Label, 4, 4))
View(beetle)
beetle$snum <- factor(substr(beetle$Label, 5, 5))
View(beetle)
## script to do data reformatting and (hopefully) do some modelling
setwd("C:/Users/notne/Research/GitHub/Gails_beetles")
library(ggplot2)
beetle <- read.csv("beetles.csv")
beetle$field <- factor(substr(beetle$Label, 1, 1))
beetle$sloc <- factor(substr(beetle$Label, 4, 4))
beetle$snum <- factor(substr(beetle$Label, 5, 5))
beetle$year <- factor(substr(beetle$Season.and.Year, 8, 12))
View(beetle)
field_year <- beetle %>%
group.by(year, field) %>%
summarise(tot = sum(abundance0),
sdtot = sd(abundnace))
field_year <- beetle %>%
group.by(year, field) %>%
summarise(tot = sum(abundance),
sdtot = sd(abundnace))
setwd("C:/Users/notne/Research/GitHub/Gails_beetles")
library(ggplot2)
library(dplyr)
field_year <- beetle %>%
group.by(year, field) %>%
summarise(tot = sum(abundance),
sdtot = sd(abundnace))
field_year <- beetle %>%
group_by(year, field) %>%
summarise(tot = sum(abundance),
sdtot = sd(abundance))
View(beetle)
beetle <- read.csv("beetles.csv")
beetle$field <- factor(substr(beetle$Label, 1, 1))
beetle$sloc <- factor(substr(beetle$Label, 4, 4))
beetle$snum <- factor(substr(beetle$Label, 5, 5))
beetle$year <- factor(substr(beetle$Season.and.Year, 8, 12))
################################################################################
## plots
## get total abundance by field/year
field_year <- beetle %>%
group_by(year, field) %>%
summarise(tot = sum(abundance),
sdtot = sd(abundance))
View(field_year)
ggplot(field_year, aes(x = year, y = tot)) +
geom_point() +
geom_line()
geom_errorbar(aes(ymin = tot-sdtot, ymax = tot+sdtot), width = 2)
facet_wrap(~field) +
field_year <- beetle %>%
group_by(field, year) %>%
summarise(tot = sum(abundance),
sdtot = sd(abundance))
ggplot(field_year, aes(x = year, y = tot)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = tot-sdtot, ymax = tot+sdtot), width = 2) +
facet_wrap(~field)
ggplot(field_year, aes(x = year, y = tot)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = tot-sdtot, ymax = tot+sdtot), width = 1) +
facet_wrap(~field)
ggplot(field_year, aes(x = field, y = tot)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = tot-sdtot, ymax = tot+sdtot), width = 1) +
facet_wrap(~year)
ggplot(field_year, aes(x = year, y = tot)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = tot-sdtot, ymax = tot+sdtot), width = 0.5) +
facet_wrap(~field)
ggplot(field_year, aes(x = field, y = tot)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = tot-sdtot, ymax = tot+sdtot), width = 0.5) +
facet_wrap(~year)
View(field_year)
View(field_year)
ggplot(field_year, aes(x = year, y = tot)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = tot-(2*sdtot), ymax = tot+(2*sdtot)), width = 0.5) +
facet_wrap(~field)
View(beetle)
## Gail's beetle data
## 12 August 2024
## script to do data reformatting and (hopefully) do some modelling
setwd("C:/Users/notne/Research/GitHub/Gails_beetles")
library(ggplot2)
library(dplyr)
################################################################################
## read in data and make factors for field (field), location of sample (sloc: in crop
## or in margin) and sample number (snum)
## I've calculated abundance and species richness already  in the input data set
## did that in Excel
beetle <- read.csv("beetles.csv")
beetle$field <- factor(substr(beetle$Label, 1, 1))
beetle$sloc <- factor(substr(beetle$Label, 4, 4))
beetle$snum <- factor(substr(beetle$Label, 5, 5))
beetle$year <- factor(substr(beetle$Season.and.Year, 8, 12))
################################################################################
## plots
## get total abundance by field/year
field_year <- beetle %>%
group_by(field, year) %>%
summarise(tot = sum(abundance),
sdtot = sd(abundance))
ggplot(field_year, aes(x = year, y = tot)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = tot-(2*sdtot), ymax = tot+(2*sdtot)), width = 0.5) +
facet_wrap(~field)
ggplot(field_year, aes(x = field, y = tot)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = tot-(2*sdtot), ymax = tot+(2*sdtot)), width = 0.5) +
facet_wrap(~year)
################################################################################
View(beetle)
trt <- beetle %>%
group_by(field, year, Management.Type) %>%
summarise(tot = sum(abundance),
sdtot = sd(abundance))
View(trt)
ggplot(trt, aes(x = year, y = tot)) +
geom_point() +
geom_jitter() +
geom_errorbar(aes(ymin = tot-(2*sdtot), ymax = tot+(2*sdtot)), width = 0.5) +
facet_wrap(~field)
View(beetle)
View(beetle)
ggplot(trt, aes(x = Management.Type, y = tot)) +
geom_point() +
geom_errorbar(aes(ymin = tot-(2*sdtot), ymax = tot+(2*sdtot)), width = 0.5) +
facet_grid(field ~ year)
View(beetle)
beetle %>%
group_by(field, year, Management.Type)
ggplot(beetle, aes(x = Management.Type, y = abundance)) +
geom_point() +
facet_grid(field ~ year)
ggplot(beetle, aes(x = Management.Type, y = abundance, colour = sloc)) +
geom_point() +
geom_jitter() +
facet_grid(field ~ year)
levels(Management.Type)
levels(beetle$Management.Type)
str(beetle)
beetle$man <- factor(beetle$Management.Type)
View(beetle)
levels(beetle$man)
levels(beetle$man) <- c("con","int")
ggplot(beetle, aes(x = man, y = abundance, colour = sloc)) +
geom_point() +
geom_jitter(width = 0.2) +
facet_grid(field ~ year)
ggplot(beetle, aes(x = man, y = abundance, colour = sloc)) +
geom_point() +
geom_jitter(width = 0.25) +
facet_grid(field ~ year)
ggplot(beetle, aes(x = man, y = abundance, colour = sloc)) +
geom_point() +
geom_jitter(width = 0.25) +
facet_grid(field ~ year) +
xlab("Management type")
ggplot(beetle, aes(x = man, y = abundance, colour = sloc)) +
geom_point() +
geom_jitter(width = 0.25) +
facet_grid(field ~ year) +
xlab("Management type") +
labs(fill = "Location")
ggplot(beetle, aes(x = man, y = abundance, colour = sloc)) +
geom_point() +
geom_jitter(width = 0.25) +
facet_grid(field ~ year) +
xlab("Management type") +
labs(color = "Location")
ggplot(beetle, aes(x = man, y = abundance, colour = sloc)) +
geom_point() +
geom_jitter(width = 0.25) +
facet_grid(field ~ year) +
xlab("Management type") +
scale_color_manual(values = c("C" = "red", "M" = "blue"),
labels = c("C" = "Crop", "M" = "Margin")) +
labs(color = "Location")
ggplot(beetle, aes(x = man, y = abundance, colour = sloc)) +
geom_point() +
geom_jitter(width = 0.25) +
facet_grid(field ~ year) +
xlab("Management type") +
scale_color_manual(values = c("C" = "red", "M" = "cyan"),
labels = c("C" = "Crop", "M" = "Margin")) +
labs(color = "Location")
ggplot(beetle, aes(x = man, y = abundance, colour = sloc)) +
geom_point() +
geom_jitter(width = 0.25) +
facet_grid(field ~ year) +
xlab("Management type") +
scale_color_manual(labels = c("C" = "Crop", "M" = "Margin")) +
labs(color = "Location")
ggplot(beetle, aes(x = man, y = abundance, colour = sloc)) +
geom_point() +
geom_jitter(width = 0.25) +
facet_grid(field ~ year) +
xlab("Management type") +
scale_color_manual(values = c("C" = "blue", "M" = "red"),
labels = c("C" = "Crop", "M" = "Margin")) +
labs(color = "Location")
ggplot(beetle, aes(x = man, y = abundance, colour = sloc)) +
geom_point() +
geom_jitter(width = 0.25) +
facet_grid(field ~ year) +
xlab("Management type") +
scale_color_manual(values = c("C" = "light blue", "M" = "red"),
labels = c("C" = "Crop", "M" = "Margin")) +
labs(color = "Location")
ggplot(beetle, aes(x = man, y = abundance, colour = sloc)) +
geom_point() +
geom_jitter(width = 0.25) +
facet_grid(field ~ year) +
xlab("Management type") +
scale_color_manual(values = c("C" = "steelblue", "M" = "tomato2"),
labels = c("C" = "Crop", "M" = "Margin")) +
labs(color = "Location")
View(trt)
trt <- beetle %>%
group_by(field, year, man) %>%
summarise(tot = sum(abundance),
sdtot = sd(abundance),
nobs = n(abundance)
View(trt)
trt <- beetle %>%
group_by(field, year, man) %>%
summarise(tot = sum(abundance),
sdtot = sd(abundance),
nobs = n(abundance))
trt <- beetle %>%
group_by(field, year, man) %>%
summarise(tot = sum(abundance),
sdtot = sd(abundance),
nobs = n())
View(trt)
ggplot(trt, aes(x = man, y = tot)) +
geom_point() +
geom_errorbar(aes(ymin = tot-(2*sdtot), ymax = tot+(2*sdtot)), width = 0.5) +
facet_grid(field ~ year)
trt <- beetle %>%
group_by(field, year, man) %>%
summarise(meanab = mean(abundance),
sdtot = sd(abundance),
nobs = n())
trt <- beetle %>%
group_by(field, year, man) %>%
summarise(meanab = mean(abundance),
sdab = sd(abundance),
nobs = n())
## grid of plots of conventional versus integrated for each field/year
ggplot(trt, aes(x = man, y = meanab)) +
geom_point() +
geom_errorbar(aes(ymin = meanab-(2*sdab), ymax = meanab+(2*sdab), width = 0.25)) +
facet_grid(field ~ year)
ggplot(trt, aes(x = man, y = meanab)) +
geom_point() +
geom_errorbar(aes(ymin = meanab-(2*sdab), ymax = meanab+(2*sdab), width = 0.25)) +
facet_grid(field ~ year) +
xlab("Management type") +
scale_color_manual(values = c("C" = "steelblue", "M" = "tomato2"),
labels = c("C" = "Crop", "M" = "Margin")) +
labs(color = "Location")
beetle %>%
group_by(field, year, man)
ggplot(beetle, aes(x = man, y = abundance, colour = sloc)) +
geom_point() +
geom_jitter(width = 0.25) +
facet_grid(field ~ year) +
xlab("Management type") +
scale_color_manual(values = c("C" = "steelblue", "M" = "tomato2"),
labels = c("C" = "Crop", "M" = "Margin")) +
labs(color = "Location")
View(beetle)
beetle %>%
group_by(field, year, man, sloc)
ggplot(beetle, aes(x = man, y = abundance, colour = sloc)) +
geom_point() +
geom_jitter(width = 0.25) +
facet_grid(field ~ year) +
xlab("Management type") +
scale_color_manual(values = c("C" = "steelblue", "M" = "tomato2"),
labels = c("C" = "Crop", "M" = "Margin")) +
labs(color = "Location")
d2016 <- beetle %>%
filter(year == 2016)
View(d2016)
ggplot(d2016, aes(x = man, y = abundance, colour = sloc)) +
geom_point() +
geom_jitter(width = 0.25) +
xlab("Management type") +
scale_color_manual(values = c("C" = "steelblue", "M" = "tomato2"),
labels = c("C" = "Crop", "M" = "Margin")) +
labs(color = "Location")
ggplot(d2016, aes(x = man, y = abundance, colour = sloc)) +
geom_point() +
geom_jitter(width = 0.25) +
xlab("Management type") +
facet_grid(~ field) +
scale_color_manual(values = c("C" = "steelblue", "M" = "tomato2"),
labels = c("C" = "Crop", "M" = "Margin")) +
labs(color = "Location")
ggplot(d2016, aes(x = man, y = abundance, colour = sloc)) +
geom_point() +
#  geom_jitter(width = 0.25) +
xlab("Management type") +
facet_grid(~ field) +
scale_color_manual(values = c("C" = "steelblue", "M" = "tomato2"),
labels = c("C" = "Crop", "M" = "Margin")) +
labs(color = "Location")
ggplot(beetle, aes(x = man, y = abundance, colour = sloc)) +
geom_point() +
#  geom_jitter(width = 0.25) +
facet_grid(field ~ year) +
xlab("Management type") +
scale_color_manual(values = c("C" = "steelblue", "M" = "tomato2"),
labels = c("C" = "Crop", "M" = "Margin")) +
labs(color = "Location")
ggplot(beetle, aes(x = man, y = abundance, colour = sloc)) +
#  geom_point() +
geom_jitter(width = 0.25) +
facet_grid(field ~ year) +
xlab("Management type") +
scale_color_manual(values = c("C" = "steelblue", "M" = "tomato2"),
labels = c("C" = "Crop", "M" = "Margin")) +
labs(color = "Location")
ggplot(beetle, aes(x = man, y = abundance, colour = sloc)) +
geom_jitter(width = 0.15) +
facet_grid(field ~ year) +
xlab("Management type") +
scale_color_manual(values = c("C" = "steelblue", "M" = "tomato2"),
labels = c("C" = "Crop", "M" = "Margin")) +
labs(color = "Location")
